/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OverviewRouteImport } from './routes/overview/route'
import { Route as OverviewIndexImport } from './routes/overview/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as OverviewProtectedImport } from './routes/overview/protected'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as AuthLayoutLoginImport } from './routes/auth/_layout.login'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const OverviewRouteRoute = OverviewRouteImport.update({
  id: '/overview',
  path: '/overview',
  getParentRoute: () => rootRoute,
} as any)

const OverviewIndexRoute = OverviewIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OverviewRouteRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const OverviewProtectedRoute = OverviewProtectedImport.update({
  id: '/protected',
  path: '/protected',
  getParentRoute: () => OverviewRouteRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLayoutLoginRoute = AuthLayoutLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/overview': {
      id: '/overview'
      path: '/overview'
      fullPath: '/overview'
      preLoaderRoute: typeof OverviewRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/overview/protected': {
      id: '/overview/protected'
      path: '/protected'
      fullPath: '/overview/protected'
      preLoaderRoute: typeof OverviewProtectedImport
      parentRoute: typeof OverviewRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/overview/': {
      id: '/overview/'
      path: '/'
      fullPath: '/overview/'
      preLoaderRoute: typeof OverviewIndexImport
      parentRoute: typeof OverviewRouteImport
    }
    '/auth/_layout/login': {
      id: '/auth/_layout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLayoutLoginImport
      parentRoute: typeof AuthLayoutImport
    }
  }
}

// Create and export the route tree

interface OverviewRouteRouteChildren {
  OverviewProtectedRoute: typeof OverviewProtectedRoute
  OverviewIndexRoute: typeof OverviewIndexRoute
}

const OverviewRouteRouteChildren: OverviewRouteRouteChildren = {
  OverviewProtectedRoute: OverviewProtectedRoute,
  OverviewIndexRoute: OverviewIndexRoute,
}

const OverviewRouteRouteWithChildren = OverviewRouteRoute._addFileChildren(
  OverviewRouteRouteChildren,
)

interface AuthLayoutRouteChildren {
  AuthLayoutLoginRoute: typeof AuthLayoutLoginRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutLoginRoute: AuthLayoutLoginRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/overview': typeof OverviewRouteRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/overview/protected': typeof OverviewProtectedRoute
  '/auth/': typeof AuthIndexRoute
  '/overview/': typeof OverviewIndexRoute
  '/auth/login': typeof AuthLayoutLoginRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthIndexRoute
  '/overview/protected': typeof OverviewProtectedRoute
  '/overview': typeof OverviewIndexRoute
  '/auth/login': typeof AuthLayoutLoginRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/overview': typeof OverviewRouteRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRouteWithChildren
  '/overview/protected': typeof OverviewProtectedRoute
  '/auth/': typeof AuthIndexRoute
  '/overview/': typeof OverviewIndexRoute
  '/auth/_layout/login': typeof AuthLayoutLoginRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/overview'
    | '/auth'
    | '/overview/protected'
    | '/auth/'
    | '/overview/'
    | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/overview/protected' | '/overview' | '/auth/login'
  id:
    | '__root__'
    | '/overview'
    | '/auth'
    | '/auth/_layout'
    | '/overview/protected'
    | '/auth/'
    | '/overview/'
    | '/auth/_layout/login'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  OverviewRouteRoute: typeof OverviewRouteRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  OverviewRouteRoute: OverviewRouteRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/overview",
        "/auth"
      ]
    },
    "/overview": {
      "filePath": "overview/route.tsx",
      "children": [
        "/overview/protected",
        "/overview/"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout",
        "/auth/"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_layout/login"
      ]
    },
    "/overview/protected": {
      "filePath": "overview/protected.tsx",
      "parent": "/overview"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    },
    "/overview/": {
      "filePath": "overview/index.tsx",
      "parent": "/overview"
    },
    "/auth/_layout/login": {
      "filePath": "auth/_layout.login.tsx",
      "parent": "/auth/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
