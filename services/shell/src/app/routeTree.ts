/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AnalyticsImport } from './routes/analytics'
import { Route as IndexImport } from './routes/index'
import { Route as AnalyticsIndexImport } from './routes/analytics/index'
import { Route as AnalyticsIdImport } from './routes/analytics/$id'

// Create/Update Routes

const AnalyticsRoute = AnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AnalyticsIndexRoute = AnalyticsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AnalyticsRoute,
} as any)

const AnalyticsIdRoute = AnalyticsIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AnalyticsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsImport
      parentRoute: typeof rootRoute
    }
    '/analytics/$id': {
      id: '/analytics/$id'
      path: '/$id'
      fullPath: '/analytics/$id'
      preLoaderRoute: typeof AnalyticsIdImport
      parentRoute: typeof AnalyticsImport
    }
    '/analytics/': {
      id: '/analytics/'
      path: '/'
      fullPath: '/analytics/'
      preLoaderRoute: typeof AnalyticsIndexImport
      parentRoute: typeof AnalyticsImport
    }
  }
}

// Create and export the route tree

interface AnalyticsRouteChildren {
  AnalyticsIdRoute: typeof AnalyticsIdRoute
  AnalyticsIndexRoute: typeof AnalyticsIndexRoute
}

const AnalyticsRouteChildren: AnalyticsRouteChildren = {
  AnalyticsIdRoute: AnalyticsIdRoute,
  AnalyticsIndexRoute: AnalyticsIndexRoute,
}

const AnalyticsRouteWithChildren = AnalyticsRoute._addFileChildren(
  AnalyticsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRouteWithChildren
  '/analytics/$id': typeof AnalyticsIdRoute
  '/analytics/': typeof AnalyticsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics/$id': typeof AnalyticsIdRoute
  '/analytics': typeof AnalyticsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRouteWithChildren
  '/analytics/$id': typeof AnalyticsIdRoute
  '/analytics/': typeof AnalyticsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/analytics' | '/analytics/$id' | '/analytics/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/analytics/$id' | '/analytics'
  id: '__root__' | '/' | '/analytics' | '/analytics/$id' | '/analytics/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsRoute: typeof AnalyticsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRoute: AnalyticsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analytics"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/analytics": {
      "filePath": "analytics.tsx",
      "children": [
        "/analytics/$id",
        "/analytics/"
      ]
    },
    "/analytics/$id": {
      "filePath": "analytics/$id.tsx",
      "parent": "/analytics"
    },
    "/analytics/": {
      "filePath": "analytics/index.tsx",
      "parent": "/analytics"
    }
  }
}
ROUTE_MANIFEST_END */
