/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LandingImport } from './routes/landing'
import { Route as FinanceRouteImport } from './routes/finance/route'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AnalyticsRouteImport } from './routes/analytics/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as FinanceSplatImport } from './routes/finance/$'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthRecoveryImport } from './routes/auth/recovery'
import { Route as AuthProfileImport } from './routes/auth/profile'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AnalyticsSplatImport } from './routes/analytics/$'

// Create/Update Routes

const LandingRoute = LandingImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRoute,
} as any)

const FinanceRouteRoute = FinanceRouteImport.update({
  id: '/finance',
  path: '/finance',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AnalyticsRouteRoute = AnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const FinanceSplatRoute = FinanceSplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => FinanceRouteRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRecoveryRoute = AuthRecoveryImport.update({
  id: '/recovery',
  path: '/recovery',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AnalyticsSplatRoute = AnalyticsSplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => AnalyticsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/finance': {
      id: '/finance'
      path: '/finance'
      fullPath: '/finance'
      preLoaderRoute: typeof FinanceRouteImport
      parentRoute: typeof rootRoute
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/analytics/$': {
      id: '/analytics/$'
      path: '/$'
      fullPath: '/analytics/$'
      preLoaderRoute: typeof AnalyticsSplatImport
      parentRoute: typeof AnalyticsRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/profile': {
      id: '/auth/profile'
      path: '/profile'
      fullPath: '/auth/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/recovery': {
      id: '/auth/recovery'
      path: '/recovery'
      fullPath: '/auth/recovery'
      preLoaderRoute: typeof AuthRecoveryImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/finance/$': {
      id: '/finance/$'
      path: '/$'
      fullPath: '/finance/$'
      preLoaderRoute: typeof FinanceSplatImport
      parentRoute: typeof FinanceRouteImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AnalyticsRouteRouteChildren {
  AnalyticsSplatRoute: typeof AnalyticsSplatRoute
}

const AnalyticsRouteRouteChildren: AnalyticsRouteRouteChildren = {
  AnalyticsSplatRoute: AnalyticsSplatRoute,
}

const AnalyticsRouteRouteWithChildren = AnalyticsRouteRoute._addFileChildren(
  AnalyticsRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthRecoveryRoute: typeof AuthRecoveryRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthRecoveryRoute: AuthRecoveryRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface FinanceRouteRouteChildren {
  FinanceSplatRoute: typeof FinanceSplatRoute
}

const FinanceRouteRouteChildren: FinanceRouteRouteChildren = {
  FinanceSplatRoute: FinanceSplatRoute,
}

const FinanceRouteRouteWithChildren = FinanceRouteRoute._addFileChildren(
  FinanceRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/finance': typeof FinanceRouteRouteWithChildren
  '/landing': typeof LandingRoute
  '/analytics/$': typeof AnalyticsSplatRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/profile': typeof AuthProfileRoute
  '/auth/recovery': typeof AuthRecoveryRoute
  '/auth/signup': typeof AuthSignupRoute
  '/finance/$': typeof FinanceSplatRoute
  '/auth/': typeof AuthIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRouteRouteWithChildren
  '/finance': typeof FinanceRouteRouteWithChildren
  '/landing': typeof LandingRoute
  '/analytics/$': typeof AnalyticsSplatRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/profile': typeof AuthProfileRoute
  '/auth/recovery': typeof AuthRecoveryRoute
  '/auth/signup': typeof AuthSignupRoute
  '/finance/$': typeof FinanceSplatRoute
  '/auth': typeof AuthIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/finance': typeof FinanceRouteRouteWithChildren
  '/landing': typeof LandingRoute
  '/analytics/$': typeof AnalyticsSplatRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/profile': typeof AuthProfileRoute
  '/auth/recovery': typeof AuthRecoveryRoute
  '/auth/signup': typeof AuthSignupRoute
  '/finance/$': typeof FinanceSplatRoute
  '/auth/': typeof AuthIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/analytics'
    | '/auth'
    | '/finance'
    | '/landing'
    | '/analytics/$'
    | '/auth/login'
    | '/auth/profile'
    | '/auth/recovery'
    | '/auth/signup'
    | '/finance/$'
    | '/auth/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/analytics'
    | '/finance'
    | '/landing'
    | '/analytics/$'
    | '/auth/login'
    | '/auth/profile'
    | '/auth/recovery'
    | '/auth/signup'
    | '/finance/$'
    | '/auth'
  id:
    | '__root__'
    | '/'
    | '/analytics'
    | '/auth'
    | '/finance'
    | '/landing'
    | '/analytics/$'
    | '/auth/login'
    | '/auth/profile'
    | '/auth/recovery'
    | '/auth/signup'
    | '/finance/$'
    | '/auth/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsRouteRoute: typeof AnalyticsRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  FinanceRouteRoute: typeof FinanceRouteRouteWithChildren
  LandingRoute: typeof LandingRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRouteRoute: AnalyticsRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  FinanceRouteRoute: FinanceRouteRouteWithChildren,
  LandingRoute: LandingRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/analytics",
        "/auth",
        "/finance",
        "/landing"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/analytics": {
      "filePath": "analytics/route.tsx",
      "children": [
        "/analytics/$"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/login",
        "/auth/profile",
        "/auth/recovery",
        "/auth/signup",
        "/auth/"
      ]
    },
    "/finance": {
      "filePath": "finance/route.tsx",
      "children": [
        "/finance/$"
      ]
    },
    "/landing": {
      "filePath": "landing.tsx"
    },
    "/analytics/$": {
      "filePath": "analytics/$.tsx",
      "parent": "/analytics"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/profile": {
      "filePath": "auth/profile.tsx",
      "parent": "/auth"
    },
    "/auth/recovery": {
      "filePath": "auth/recovery.tsx",
      "parent": "/auth"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx",
      "parent": "/auth"
    },
    "/finance/$": {
      "filePath": "finance/$.tsx",
      "parent": "/finance"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    }
  }
}
ROUTE_MANIFEST_END */
